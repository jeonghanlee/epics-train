Recipe for setting up tools
===========================

~/epics-train/tools contains all the tools: EPICS base, asyn, CS-Studio, ...

~/epics-train/settings.sh sets PATH etc.
To make this more modular, it's actually sourcing all files in ~/epics-train/tools/profile.d

# Arrange for settings.sh to be sourced:
echo >>~/.bashrc source ~/epics-train/settings.sh
# Close terminal, open new terminal to see the effect.


# Disable firewall
sudo systemctl stop firewalld
sudo systemctl disable firewalld


# EPICS Base
sudo yum install -y readline-devel
cd ~/epics-train/tools
wget https://epics.anl.gov/download/base/base-7.0.1.1.tar.gz
tar vzxf base-7.0.1.1.tar.gz
rm base-7.0.1.1.tar.gz
cd base-7.0.1.1
make clean uninstall
make


# EtherIP
cd ~/epics-train/tools
git clone https://github.com/EPICSTools/ether_ip.git
cd ether_ip
make
echo "ETHER_IP = "`pwd` >> ~/epics-train/RELEASE.local


# re2c for Sequencer
cd ~/epics-train/tools
wget https://github.com/skvadrik/re2c/releases/download/1.1/re2c-1.1.tar.gz
tar vzxf re2c-1.1.tar.gz
rm re2c-1.1.tar.gz
cd re2c-1.1
./autogen.sh 
./configure 
make
sudo make install


# Sequencer
cd ~/epics-train/tools
wget http://www-csr.bessy.de/control/SoftDist/sequencer/releases/seq-2.2.6.tar.gz
tar vzxf seq-2.2.6.tar.gz 
rm seq-2.2.6.tar.gz 
cd seq-2.2.6/
cp ../ether_ip/configure/RELEASE configure
make
echo "SNCSEQ = "`pwd` >> ~/epics-train/RELEASE.local


# Autosave
cd ~/epics-train/tools
wget https://github.com/epics-modules/autosave/archive/R5-9.zip
unzip R5-9.zip
rm R5-9.zip 
cd autosave-R5-9
cp ../ether_ip/configure/RELEASE configure
make clean uninstall
make
echo "AUTOSAVE = "`pwd` >> ~/epics-train/RELEASE.local


# Asyn
cd ~/epics-train/tools
wget https://www.aps.anl.gov/epics/download/modules/asyn4-33.tar.gz
tar vzxf asyn4-33.tar.gz
rm asyn4-33.tar.gz
cd asyn4-33
cp ../ether_ip/configure/RELEASE configure
make
echo "ASYN = "`pwd` >> ~/epics-train/RELEASE.local


# Stream Device
cd ~/epics-train/tools
wget https://github.com/paulscherrerinstitute/StreamDevice/archive/master.zip
unzip master.zip
rm master.zip
cd StreamDevice-master
cp ../ether_ip/configure/RELEASE configure
make
echo "STREAM = "`pwd` >> ~/epics-train/RELEASE.local


# Busy record
cd ~/epics-train/tools
wget https://epics.anl.gov/bcda/synApps/tar/busy_R1-6-1.tar.gz
tar vzxf busy_R1-6-1.tar.gz
rm busy_R1-6-1.tar.gz
cd busy-1-6-1
cp ../ether_ip/configure/RELEASE configure
make
echo "BUSY = "`pwd` >> ~/epics-train/RELEASE.local


# SSCAN module (not used)
#wget https://epics.anl.gov/bcda/synApps/tar/sscan_R2-10.tar.gz
#tar vzxf sscan_R2-10.tar.gz 
#rm sscan_R2-10.tar.gz 
#cd sscan-2-10/
#cp ../ether_ip/configure/RELEASE configure/
#make
#echo "SSCAN = "`pwd` >> ~/epics-train/RELEASE.local


# CALC module (doesn't compile for EPICS 7)
#wget https://github.com/epics-modules/calc/archive/R3-6-1.tar.gz
#tar vzxf R3-6-1.tar.gz 
#rm R3-6-1.tar.gz 


#    areaDetector
wget https://github.com/areaDetector/areaDetector/archive/R3-3-2.zip
unzip R3-3-2.zip 
mv areaDetector-R3-3-2 areaDetector
rm R3-3-2.zip 

wget https://github.com/areaDetector/ADCore/archive/R3-3-2.zip
unzip R3-3-2.zip 
rm -rf areaDetector/ADCore/*
mv ADCore-R3-3-2/* areaDetector/ADCore/
rm R3-3-2.zip 
rm -rf ADCore-R3-3-2

wget https://github.com/areaDetector/ADSupport/archive/R1-4.zip
unzip R1-4.zip 
rm -rf areaDetector/ADSupport/*
mv ADSupport-R1-4/* areaDetector/ADSupport
rm -rf ADSupport-R1-4/
rm R1-4.zip 

wget https://github.com/areaDetector/ADSimDetector/archive/R2-8.zip
unzip R2-8.zip 
mv ADSimDetector-R2-8/* areaDetector/ADSimDetector/
rm -rf ADSimDetector-R2-8/
rm R2-8.zip 

# Edit many of the areaDetector/configure/* files...
cd areaDetector
make



# Example V4 image and SNS neutron data similator
cd ~/epics-train/tools
git clone https://github.com/kasemir/EPICSV4Sandbox.git
(cd EPICSV4Sandbox/neutronsDemoServer; make)
(cd EPICSV4Sandbox/ntndarrayServer; make)


# Java
# Can't automate. Need to download JDK 8 (tar.gz, not the rpm) and 10
# from http://www.oracle.com/technetwork/java/javase/downloads/index.html
# and JDK11 from http://jdk.java.net/11/
tar vzxf jdk-8u*-linux-x64.tar.gz
tar vzxf jdk-10*linux-x64*.tar.gz
tar vzxf openjdk-11_linux-x64_bin.tar.gz

# VDCT
cd ~/epics-train/tools/
wget https://github.com/epics-extensions/VisualDCT/releases/download/v2.8.1/VisualDCT-2.8.1-distribution.tar.gz
tar vzxf VisualDCT-2.8.1-distribution.tar.gz 
rm VisualDCT-2.8.1-distribution.tar.gz 


# CSS/Phoebus
cd ~/epics-train/tools/
rm -rf phoebus-0.0.1
wget https://controlssoftware.sns.ornl.gov/css_phoebus/nightly/phoebus-0.0.1-linux.zip
unzip phoebus-0.0.1-linux.zip
rm phoebus-0.0.1-linux.zip 

rm -rf ~training/epics-train/examples/Display\ Builder
phoebus
# Applications, Display, Examples, Install in ~training/epics-train/examples,
# i.e. creating examples/Display Builder

# PyEpics CA client
cd ~/epics-train/tools/
wget https://github.com/pyepics/pyepics/archive/
unzip 3.3.1.zip
cd pyepics-3.3.1
python setup.py build
sudo python setup.py install
cd ..
rm 3.3.1.zip
sudo rm -rf pyepics-3.3.1


# EPICS pvaPY Module
cd ~/epics-train/tools/
sudo yum install -y numpy
sudo yum install -y python-devel
sudo yum install -y boost-devel
sudo yum install -y boost-python
git clone https://github.com/epics-base/pvaPy.git
cd pvaPy
make configure EPICS_BASE=$EPICS_BASE
make


# ^^^^^^^^^^^^^^^^^^^^ DONE ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# CSS
wget https://ics-web.sns.ornl.gov/css/nightly/basic-epics-4.5.0-linux.gtk.x86_64.zip
unzip basic-epics-4.5.0-linux.gtk.x86_64.zip
mv basic-epics-4.5.0 CSS
rm basic-epics-4.5.0-linux.gtk.x86_64.zip

# Exit CSS in 'CS-Studio' perspective



# EDM
cd ~/epics-train/tools
# Prepare EPICS 'extensions' directory
wget https://epics.anl.gov/download/extensions/extensionsTop_20120904.tar.gz
tar vzxf extensionsTop_20120904.tar.gz
.. configure extensions/configure/RELEASE

# Get EDM from https://epics.anl.gov/extensions/index.php,
# unpack into ~/epics-train/tools/extensions/src
# Get dependencies
sudo yum install libXt-devel
sudo yum install libXmu-devel
sudo yum install motif-devel
sudo yum install libXtst-devel
sudo yum install giflib-devel
sudo yum install xorg-x11-fonts-75dpi
sudo yum install xorg-x11-fonts-ISO8859-1-75dpi

cd ~/epics-train/tools/extensions/src/edm
make

cd setup
export EDMFILES=/home/training/epics-train/tools/extensions/src/edm/setup
export EDMOBJECTS=$EDMFILES
export EDMPVOBJECTS=$EDMFILES
export PATH=/home/training/epics-train/tools/extensions/bin/linux-x86_64:$PATH
edm -add /home/training/epics-train/tools/extensions/lib/linux-x86_64/libEdmBase.so 
edm -add /home/training/epics-train/tools/extensions/lib/linux-x86_64/lib57d79238-2924-420b-ba67-dfbecdf03fcd.so
edm -addpv /home/training/epics-train/tools/extensions/lib/linux-x86_64/libEpics.so 
edm -addpv /home/training/epics-train/tools/extensions/lib/linux-x86_64/libCalc.so 
edm -addpv /home/training/epics-train/tools/extensions/lib/linux-x86_64/libLoc.so 

cd /home/training/epics-train/tools
cp edm_fonts.list extensions/src/edm/setup/fonts.list


# C-Python support for CSS
sudo easy_install py4j

mkdir /tmp/s
cd /tmp/s
unzip ~/epics-train/tools/CSS/plugins/org.csstudio.display.builder.runtime_*.jar 
cd scripts/
sudo python setup.py install
cd
rm -rf /tmp/s



cd ~/epics-train/examples
make


# State before taking snapwhot of VM:
rm -rf ~/.ssh
rm -rf ~/.phoebus
# CSS left in reset 'CS-Studio' perspective,
# no files added, no "Display Builder" samples installed,
# ~/.bash_history cleared
